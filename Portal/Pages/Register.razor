@page "/register"
@inject IUserEndpoint UserEndpoint
@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

<h3>Create Account</h3>

<EditForm Model="@model" OnValidSubmit="ExecuteRegister"> 
    <DataAnnotationsValidator/>

    <div class="form-group row">
        <label for="first-name" class="col-md-2 col-form-label">First Name:</label>
        <div class="col-md-10">
            <InputText id="first-name" class="form-control" @bind-Value="model.FirstName"/>
            <ValidationMessage For="@(() => model.FirstName)"/>
        </div>
    </div>

    <div class="form-group row">
        <label for="last-name" class="col-md-2 col-form-label">Last Name:</label>
        <div class="col-md-10">
            <InputText id="last-name" class="form-control" @bind-Value="model.LastName"/>
            <ValidationMessage For="@(() => model.LastName)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="email" class="col-md-2 col-form-label">Email Address:</label>
        <div class="col-md-10">
            <InputText id="email" class="form-control" @bind-Value="model.EmailAddress"/>
            <ValidationMessage For="@(() => model.EmailAddress)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label"> Password:</label>
        <div class="col-md-10">
            <InputText id="password" type="password" class="form-control" @bind-Value="model.Password"/>
            <ValidationMessage For="@(() => model.Password)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="confirm-password" class="col-md-2 col-form-label">Confirm Password:</label>
        <div class="col-md-10">
            <InputText id="confirm-password" type="password" class="form-control" @bind-Value="model.ConfirmPassword"/>
            <ValidationMessage For="@(() => model.ConfirmPassword)" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 text-end p-2">
            <button type="submit" class="btn btn-success">Create</button>
        </div>
    </div>    
</EditForm>

@if (showError)
{
    <div class="row">
        <div class="alert alert-danger p-2" role="alert">
            @errorMessage
        </div>
    </div>
}

@code {
    CreateUserModel model = new();

    private bool showError = false;
    private string errorMessage = "";

    public async Task ExecuteRegister()
    {
        errorMessage = "";
        showError = false;

        try
        {
            await UserEndpoint.CreateUser(model);
            var result = await AuthService.LogIn(new() { Email = model.EmailAddress, Password = model.Password });

            if (result is not null)
            {
                NavManager.NavigateTo("/", true);
            }
            else
            {
                errorMessage = "You were registered sucessfully, but there was a problem signing you in.";
            }
        }
        catch (Exception)
        {
            showError = true;
            errorMessage = $"Could not register user {model.EmailAddress}.";
        }
    }
}
